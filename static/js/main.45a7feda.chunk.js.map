{"version":3,"sources":["img/star_icon.png","components/Movie.js","components/Tvshow.js","routes/Home.js","routes/Join.js","routes/Mypage.js","routes/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Movie","id","title","poster","rating","summary","genres","date","className","src","alt","slice","length","require","Tvshow","Home","state","m_isLoding","t_isLoding","movies","tvshows","getMovies","a","axios","get","results","data","setState","getTvshows","this","slick_settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","to","pathname","style","textDecoration","type","placeholder","maxLength","map","movie","key","release_date","overview","poster_path","genre_ids","vote_average","tvshow","name","first_air_date","React","Component","Join","useState","setId","pw","setpw","pw_check","setPw_check","setName","birth","setBirth","email","setEmail","male","female","gender","setGender","fetchData","post","then","respond","console","log","catch","error","responds","onSubmit","useCallback","e","preventDefault","onChangeGender","target","value","onChange","checked","htmlFor","Mypage","Login","marginTop","marginBottom","height","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.45a7feda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star_icon.45dd5470.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./reset.css\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, title, poster, summary, genres, date, rating }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img\r\n        className=\"poster\"\r\n        src={\"https://image.tmdb.org/t/p/w500\" + poster}\r\n        alt={title}\r\n        title={title}\r\n      />\r\n      <div className=\"movie_data\">\r\n        <h3 className=\"movie_title\">\r\n          {title.slice(0, 15)}\r\n          {title.length > 15 ? \"...\" : \"\"}\r\n        </h3>\r\n        <div className=\"movie_rating\">\r\n          <img\r\n            className=\"star_icon\"\r\n            src={require(\"../img/star_icon.png\")}\r\n            alt=\"rating\"\r\n          />\r\n          <h5 className=\"rating_text\">{rating}</h5>\r\n        </div>\r\n        {/*<h5 className=\"movie_year\">{date}</h5>*/}\r\n        {/*<ul className=\"genres\">\r\n                {genres.map((genre, index) => (\r\n                <li key={index} className=\"genres_genre\">\r\n                    {genre}\r\n                </li>\r\n             ))}\r\n            </ul>*/}\r\n        {/* <p className=\"movie_summary\">{summary}</p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./reset.css\";\r\nimport \"./Tvshow.css\";\r\n\r\nfunction Tvshow({ id, title, poster, summary, genres, date, rating }) {\r\n  return (\r\n    <div className=\"tvshow\">\r\n      <img\r\n        className=\"poster\"\r\n        src={\"https://image.tmdb.org/t/p/w500\" + poster}\r\n        alt={title}\r\n        title={title}\r\n      />\r\n      <div className=\"tvshow_data\">\r\n        <h3 className=\"tvshow_title\">\r\n          {title.slice(0, 15)}\r\n          {title.length > 15 ? \"...\" : \"\"}\r\n        </h3>\r\n        <div className=\"tvshow_rating\">\r\n          <img\r\n            className=\"star_icon\"\r\n            src={require(\"../img/star_icon.png\")}\r\n            alt=\"rating\"\r\n          />\r\n          <h5 className=\"rating_text\">{rating}</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTvshow.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Tvshow;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Movie from \"../components/Movie\";\r\nimport Tvshow from \"../components/Tvshow\";\r\nimport \"../components/reset.css\";\r\nimport \"./Home.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slick from \"react-slick\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    m_isLoding: true,\r\n    t_isLoding: true,\r\n    movies: [],\r\n    tvshows: [],\r\n  };\r\n\r\n  getMovies = async () => {\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(\r\n      \"https://api.themoviedb.org/3/movie/now_playing?api_key=9aa38313510a50c3ae30091b52efcc90&language=ko&page=1®ion=KR\"\r\n    );\r\n    this.setState({ movies: results, m_isLoding: false });\r\n  };\r\n\r\n  getTvshows = async () => {\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(\r\n      \"https://api.themoviedb.org/3/tv/on_the_air?api_key=9aa38313510a50c3ae30091b52efcc90&language=ko&page=1\"\r\n    );\r\n    this.setState({ tvshows: results, t_isLoding: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n    this.getTvshows();\r\n  }\r\n\r\n  render() {\r\n    const { m_isLoding, t_isLoding, movies, tvshows } = this.state;\r\n    const slick_settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 4,\r\n      autoplay: false,\r\n    };\r\n    return (\r\n      <section className=\"cont\">\r\n        {m_isLoding && t_isLoding ? (\r\n          <div className=\"loder\">\r\n            {/* 로딩창 */}\r\n            <span className=\"loder_text\">Lodding...</span>\r\n            {/* //로딩창 */}\r\n          </div>\r\n        ) : (\r\n          <div className=\"Home\">\r\n            <div id=\"wrap\">\r\n              <header>\r\n                <div className=\"header\">\r\n                  {/* 헤더메뉴 */}\r\n                  <div className=\"header_top\">\r\n                    <div className=\"container\">\r\n                      <ul>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/Login\",\r\n                            state: {},\r\n                          }}\r\n                        >\r\n                          <li className=\"login\">로그인</li>\r\n                        </Link>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/Join\",\r\n                            state: {},\r\n                          }}\r\n                        >\r\n                          <li className=\"join\">회원가입</li>\r\n                        </Link>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/Mypage\",\r\n                            state: {},\r\n                          }}\r\n                        >\r\n                          <li className=\"mypage\">마이페이지</li>\r\n                        </Link>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  {/* //헤더메뉴 */}\r\n                  {/* 웹 이름 */}\r\n                  <div className=\"header_center\">\r\n                    <div className=\"container\">\r\n                      <Link\r\n                        style={{ textDecoration: \"none\" }}\r\n                        to={{\r\n                          pathname: \"/\",\r\n                        }}\r\n                      >\r\n                        <h1>re-joy</h1>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  {/* //웹 이름 */}\r\n                  {/* 링크 */}\r\n                  <div className=\"linker\">\r\n                    <div className=\"container\">\r\n                      {/* <ul>\r\n                                        <li><a href=\"https://www.netflix.com/browse\" target=\"_blank\">Netflix</a></li>\r\n                                        <li><a href=\"https://play.watcha.net/\" target=\"_blank\">Watcha</a></li>\r\n                                        <li><a href=\"https://www.wavve.com/\" target=\"_blank\">Wave</a></li>\r\n                                    </ul> */}\r\n                    </div>\r\n                  </div>\r\n                  {/* //링크 */}\r\n                </div>\r\n              </header>\r\n\r\n              <nav>\r\n                {/* 검색 */}\r\n                <fieldset className=\"search\">\r\n                  <div className=\"container\">\r\n                    <legend className=\"ir_su\">search</legend>\r\n                    <form className=\"search_cont\">\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"input_search\"\r\n                        placeholder=\"search\"\r\n                        maxLength=\"50\"\r\n                      />\r\n                      <button>\r\n                        <span className=\"search_button\"></span>\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </fieldset>\r\n                {/* //검색 */}\r\n                {/* 메뉴 */}\r\n                <div className=\"menu\">\r\n                  <div className=\"container\">\r\n                    <h2 className=\"ir_su\">menu</h2>\r\n                  </div>\r\n                </div>\r\n                {/* //메뉴 */}\r\n              </nav>\r\n\r\n              <div id=\"content\">\r\n                {/* 추천 */}\r\n                <div className=\"recommend\">\r\n                  <div className=\"container\">\r\n                    <section>\r\n                      <div>\r\n                        <h3 className=\"ir_su\">recommend</h3>\r\n                        <div className=\"movies\">\r\n                          <h3 className=\"recommend_sort_title\">추천 영화</h3>\r\n                          <Slick {...slick_settings}>\r\n                            {movies.map((movie) => (\r\n                              <Movie\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                date={movie.release_date}\r\n                                summary={movie.overview}\r\n                                poster={movie.poster_path}\r\n                                genres={movie.genre_ids}\r\n                                rating={movie.vote_average}\r\n                              />\r\n                            ))}\r\n                          </Slick>\r\n                        </div>\r\n                        <div className=\"tvshows\">\r\n                          <h3 className=\"recommend_sort_title\">추천 티비쇼</h3>\r\n                          <Slick {...slick_settings}>\r\n                            {tvshows.map((tvshow) => (\r\n                              <Tvshow\r\n                                key={tvshow.id}\r\n                                id={tvshow.id}\r\n                                title={tvshow.name}\r\n                                date={tvshow.first_air_date}\r\n                                summary={tvshow.overview}\r\n                                poster={tvshow.poster_path}\r\n                                genres={tvshow.genre_ids}\r\n                                rating={tvshow.vote_average}\r\n                              />\r\n                            ))}\r\n                          </Slick>\r\n                        </div>\r\n                      </div>\r\n                    </section>\r\n                  </div>\r\n                </div>\r\n                {/* //추천 */}\r\n                {/* 분류 */}\r\n                <div className=\"category\">\r\n                  <div className=\"container\">\r\n                    <section>\r\n                      <h3>분류</h3>\r\n                    </section>\r\n                  </div>\r\n                </div>\r\n                {/* //분류 */}\r\n              </div>\r\n              <footer>\r\n                <div className=\"footer\">\r\n                  <div className=\"container\">\r\n                    <h2>푸터</h2>\r\n                  </div>\r\n                </div>\r\n              </footer>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../components/reset.css\";\r\nimport \"./Join.css\";\r\n\r\nconst Join = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setpw] = useState(\"\");\r\n  const [pw_check, setPw_check] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [birth, setBirth] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [gender, setGender] = useState({\r\n    male: true,\r\n    female: false,\r\n  });\r\n\r\n  const serverUrl = \"localhost:9000/Join_process\";\r\n\r\n  const fetchData = async () => {\r\n    await axios\r\n      .post(serverUrl, { id, pw, pw_check, name, birth, email, gender })\r\n      .then((respond) => {\r\n        console.log(respond);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error :\", error.responds);\r\n      });\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      fetchData();\r\n    },\r\n    [id, pw, pw_check, name, birth, email, gender]\r\n  );\r\n  const onChangeId = (e) => {\r\n    setId(e.target.value);\r\n  };\r\n  const onChangePw = (e) => {\r\n    setpw(e.target.value);\r\n  };\r\n  const onChangePw_check = (e) => {\r\n    setPw_check(e.target.value);\r\n  };\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const onChangeBirth = (e) => {\r\n    setBirth(e.target.value);\r\n  };\r\n  const onChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const onChangeGender = (e) => {\r\n    setGender(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"join_wrap\">\r\n      {/* 헤더 */}\r\n      <header className=\"join_header\">\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          to={{\r\n            pathname: \"/\",\r\n          }}\r\n        >\r\n          <h1>re-joy</h1>\r\n        </Link>\r\n      </header>\r\n      {/* //헤더 */}\r\n      {/* 컨텐츠 */}\r\n      <div className=\"join_content\">\r\n        {/* 회원가입 입력 */}\r\n        <div className=\"join_input\">\r\n          <h2>회원가입</h2>\r\n          <form onSubmit={onSubmit}>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"아이디\"\r\n                value={id}\r\n                onChange={onChangeId}\r\n                maxLength=\"20\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"비밀번호\"\r\n                value={pw}\r\n                onChange={onChangePw}\r\n                maxLength=\"20\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"비밀번호 확인\"\r\n                value={pw_check}\r\n                onChange={onChangePw_check}\r\n                maxLength=\"20\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"이름\"\r\n                className=\"input_name\"\r\n                value={name}\r\n                onChange={onChangeName}\r\n                maxLength=\"20\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"male_radio\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"성별\"\r\n                  value=\"male\"\r\n                  id=\"male\"\r\n                  checked\r\n                  onChange={onChangeGender}\r\n                />\r\n                <label htmlFor=\"male\">남자</label>\r\n              </div>\r\n              <div className=\"female_radio\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"성별\"\r\n                  value=\"female\"\r\n                  id=\"female\"\r\n                  onChange={onChangeGender}\r\n                />\r\n                <label htmlFor=\"female\">여자</label>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"생년월일(yyyymmdd)\"\r\n                value={birth}\r\n                onChange={onChangeBirth}\r\n                maxLength=\"20\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"이메일\"\r\n                value={email}\r\n                onChange={onChangeEmail}\r\n                maxLength=\"20\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input type=\"submit\" value=\"가입하기\" />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {/* //회원가입 입력 */}\r\n      </div>\r\n      {/* 컨텐츠 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","import React from 'react';\r\n\r\nfunction Mypage(){\r\n    return <span>this page is for Mypage</span>\r\n}\r\n\r\nexport default Mypage;","import React, { useState ,useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../components/reset.css\";\r\n\r\nconst Login = () => {\r\n  const [id, setId] = useState(\"\");\r\n  const [pw, setpw] = useState(\"\");\r\n\r\n  const serverUrl = \"localhost:9000/Join_process\";\r\n\r\n  const fetchData = async () => {\r\n    await axios\r\n      .post(serverUrl, { id, pw })\r\n      .then((respond) => {\r\n        console.log(respond);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error :\", error.responds);\r\n      });\r\n  };\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      fetchData();\r\n    },\r\n    [id, pw]\r\n  );\r\n  const onChangeId = (e) => {\r\n    setId(e.target.value);\r\n  };\r\n  const onChangePw = (e) => {\r\n    setpw(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login_wrap\">\r\n      {/* 헤더 */}\r\n      <header className=\"join_header\">\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          to={{\r\n            pathname: \"/\",\r\n          }}\r\n        >\r\n          <h1>re-joy</h1>\r\n        </Link>\r\n      </header>\r\n      {/* //헤더 */}\r\n      {/* 컨텐츠 */}\r\n      <div className=\"join_content\" style={{ marginTop: 50 }}>\r\n        {/* 로그인 입력 */}\r\n        <div className=\"join_input\">\r\n          <h2 style={{ marginBottom: 20 }}>로그인</h2>\r\n          <form onSubmit={onSubmit}>\r\n            <div>\r\n              <input\r\n                style={{marginBottom: 10, height:50}}\r\n                type=\"text\"\r\n                placeholder=\"아이디\"\r\n                value={id}\r\n                onChange={onChangeId}\r\n                maxLength=\"20\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                style={{ marginBottom: 20, height:50}}\r\n                type=\"password\"\r\n                placeholder=\"비밀번호\"\r\n                value={pw}\r\n                onChange={onChangePw}\r\n                maxLength=\"20\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input type=\"submit\" value=\"로그인\" style={{height:50}}/>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {/* //로그인 입력 */}\r\n      </div>\r\n      {/* 컨텐츠 */}\r\n      {/* 푸터 */}\r\n      <footer>\r\n        <div id=\"move_join\">\r\n          <ul>\r\n            <Link\r\n              to={{\r\n                pathname: \"/Join\",\r\n                state: {},\r\n              }}\r\n            >\r\n              <li>회원가입</li>\r\n            </Link>\r\n            <li>아이디찾기</li>\r\n            <li>비밀번호찾기</li>\r\n          </ul>\r\n        </div>\r\n      </footer>\r\n      {/* //푸터 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport Join from \"./routes/Join\";\r\nimport Mypage from \"./routes/Mypage\";\r\nimport Login from \"./routes/Login\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/Mypage\" component={Mypage} />\r\n      <Route path=\"/Join\" component={Join} />\r\n      <Route path=\"/Login\" component={Login} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}