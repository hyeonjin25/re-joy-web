{"version":3,"sources":["img/star_icon.png","components/Movie.js","components/Tvshow.js","routes/Home.js","routes/Join.js","routes/Mypage.js","routes/Login.js","components/SearchRes.js","routes/Search.js","routes/Detail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Movie","id","title","poster","backdrop","summary","genres","adult","date","rating","className","to","pathname","state","src","alt","require","Tvshow","Home","m_isLoding","t_isLoding","movies","tvshows","query","is_logined","getMovies","a","axios","get","results","data","setState","getTvshows","logout","Cookies","remove","window","location","reload","header_menu","onClick","onSearch_click","props","history","push","onSearch","e","target","value","this","console","log","slick_settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","style","textDecoration","type","onChange","placeholder","maxLength","map","movie","key","release_date","overview","poster_path","backdrop_path","genre_ids","vote_average","tvshow","name","first_air_date","React","Component","Join","useState","setId","idValid","setIdValid","pw","setPw","pwValid","setPwValid","pw_check","setPw_check","pw_checkValid","setPw_checkValid","setName","nameValid","setNameValid","birth","setBirth","birthValid","setBirthValid","email","setEmail","emailValid","setEmailValid","gender","setGender","err","setErr","onSubmit","preventDefault","post","then","response","catch","error","onChangeGender","length","borderColor","test","checked","htmlFor","Mypage","login_id","setLogin_id","setIs_logined","useEffect","Login","fetchData","respond","set","userid","message","marginTop","marginBottom","height","SearchRes","marginLeft","marginRight","color","Search","match","params","query_results","isLoding","getSearchRes","serchUrl","errer","undefined","padding","paddingTop","display","flexWrap","media_type","Detail","fav_process","fav_func","alert","scrollTo","document","body","backgroundColor","width","backgroundImage","backgroundRepeat","backgroundSize","backgroundPositionX","zIndex","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2850eae5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star_icon.45dd5470.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./reset.css\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, title, poster, backdrop, summary, genres, adult, date, rating }) {\r\n  return (\r\n    <div className=\"space_around\">\r\n      <Link\r\n        to={{\r\n          pathname: \"/Detail/\" + title,\r\n          state: { id, title, poster, backdrop, summary, genres, adult, date, rating },\r\n        }}\r\n      >\r\n        <div className=\"movie\">\r\n          <img\r\n            className=\"poster\"\r\n            src={\"https://image.tmdb.org/t/p/w500\" + poster}\r\n            alt={title}\r\n            title={title}\r\n          />\r\n          <div className=\"movie_data\">\r\n            <h3 className=\"movie_title\">{title}</h3>\r\n            <div className=\"movie_rating\">\r\n              <img\r\n                className=\"star_icon\"\r\n                src={require(\"../img/star_icon.png\")}\r\n                alt=\"rating\"\r\n              />\r\n              <h5 className=\"rating_text\">{rating}</h5>\r\n            </div>\r\n            {/*<h5 className=\"movie_year\">{date}</h5>*/}\r\n            {/*<ul className=\"genres\">\r\n                {genres.map((genre, index) => (\r\n                <li key={index} className=\"genres_genre\">\r\n                    {genre}\r\n                </li>\r\n             ))}\r\n            </ul>*/}\r\n            {/* <p className=\"movie_summary\">{summary}</p> */}\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./reset.css\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Tvshow({ id, title, poster, backdrop, summary, genres, adult, date, rating }) {\r\n  return (\r\n    <div className=\"space_around\">\r\n      <Link\r\n        to={{\r\n          pathname: \"/Detail/\" + title,\r\n          state: { id, title, poster, backdrop, summary, genres, adult, date, rating },\r\n        }}\r\n      >\r\n        <div className=\"movie\">\r\n          <img\r\n            className=\"poster\"\r\n            src={\"https://image.tmdb.org/t/p/w500\" + poster}\r\n            alt={title}\r\n            title={title}\r\n          />\r\n          <div className=\"movie_data\">\r\n            <h3 className=\"movie_title\">\r\n              {title}\r\n            </h3>\r\n            <div className=\"movie_rating\">\r\n              <img\r\n                className=\"star_icon\"\r\n                src={require(\"../img/star_icon.png\")}\r\n                alt=\"rating\"\r\n              />\r\n              <h5 className=\"rating_text\">{rating}</h5>\r\n            </div>\r\n            {/*<h5 className=\"movie_year\">{date}</h5>*/}\r\n            {/*<ul className=\"genres\">\r\n                  {genres.map((genre, index) => (\r\n                  <li key={index} className=\"genres_genre\">\r\n                      {genre}\r\n                  </li>\r\n              ))}\r\n              </ul>*/}\r\n            {/* <p className=\"movie_summary\">{summary}</p> */}\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nTvshow.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Tvshow;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Movie from \"../components/Movie\";\r\nimport Tvshow from \"../components/Tvshow\";\r\nimport \"../components/reset.css\";\r\nimport \"./Home.css\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slick from \"react-slick\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    m_isLoding: true,\r\n    t_isLoding: true,\r\n    movies: [],\r\n    tvshows: [],\r\n    query: \"\",\r\n    is_logined: false,\r\n  };\r\n\r\n  //영화 api가져오기(tmdb)\r\n  getMovies = async () => {\r\n    const movieUrl =\r\n      \"https://api.themoviedb.org/3/movie/now_playing?api_key=9aa38313510a50c3ae30091b52efcc90&language=ko&page=1®ion=KR\";\r\n\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(movieUrl);\r\n    this.setState({ movies: results, m_isLoding: false });\r\n    //console.log(results);\r\n  };\r\n\r\n  //티비 프로그램 api가져오기(tmdb)\r\n  getTvshows = async () => {\r\n    const tvshowUrl =\r\n      \"https://api.themoviedb.org/3/tv/on_the_air?api_key=9aa38313510a50c3ae30091b52efcc90&language=ko&page=1\";\r\n\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(tvshowUrl);\r\n    this.setState({ tvshows: results, t_isLoding: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n    this.getTvshows();\r\n    //로그인이 되어있는지 확인하기\r\n    if (Cookies.get(\"login_id\")) {\r\n      //로그인 되어있을 경우\r\n      this.setState({\r\n        is_logined: true,\r\n      });\r\n      console.log(Cookies.get(\"login_id\"))\r\n    }\r\n    //console.log(this.props);\r\n  }\r\n\r\n  logout = () => {\r\n    Cookies.remove(\"login_id\");\r\n    window.location.reload();\r\n  };\r\n\r\n  //로그인 여부에 따라 헤더메뉴 변경\r\n  header_menu = () => {\r\n    //로그인시 로그아웃 버튼 나오도록\r\n    if (this.state.is_logined === true) {\r\n      return (\r\n        <div className=\"header_log\">\r\n          <Link\r\n            to={{\r\n              pathname: \"/\",\r\n              state: {},\r\n            }}\r\n          >\r\n            <li className=\"logout\" onClick={this.logout}>\r\n              로그아웃\r\n            </li>\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n    //로그인 안했을 시 로그인, 회원가입 버튼 나오도록\r\n    else {\r\n      return (\r\n        <div className=\"header_log\">\r\n          <Link\r\n            to={{\r\n              pathname: \"/Login\",\r\n            }}\r\n          >\r\n            <li className=\"login\">로그인</li>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/Join\",\r\n              state: {},\r\n            }}\r\n          >\r\n            <li className=\"join\">회원가입</li>\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  //검색 버튼 누를 시(onClick)\r\n  onSearch_click = async () => {\r\n    //검색어 입력 했을시에만\r\n    if (this.state.query !== \"\") {\r\n      this.props.history.push({\r\n        pathname: \"/Search/\" + this.state.query,\r\n        state: this.state.query,\r\n      });\r\n    }\r\n  };\r\n\r\n  //검색창에 데이터 입력시(onChange)\r\n  onSearch = (e) => {\r\n    this.setState({ query: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { m_isLoding, t_isLoding, movies, tvshows } = this.state;\r\n    const slick_settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 4,\r\n      slidesToScroll: 4,\r\n      autoplay: false,\r\n    };\r\n\r\n    return (\r\n      <section className=\"cont\">\r\n        {m_isLoding && t_isLoding ? (\r\n          <div className=\"loder\">\r\n            {/* 로딩창 */}\r\n            <span className=\"loder_text\">Lodding...</span>\r\n            {/* //로딩창 */}\r\n          </div>\r\n        ) : (\r\n          <div className=\"Home\">\r\n            <div id=\"wrap\">\r\n              <header>\r\n                <div className=\"header\">\r\n                  {/* 헤더메뉴 */}\r\n                  <div className=\"header_top\">\r\n                    <div className=\"container\">\r\n                      <ul>\r\n                        {this.header_menu()}\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/Mypage\",\r\n                            state: {},\r\n                          }}\r\n                        >\r\n                          <li className=\"mypage\">마이페이지</li>\r\n                        </Link>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  {/* //헤더메뉴 */}\r\n                  {/* 웹 이름 */}\r\n                  <div className=\"header_center\">\r\n                    <div className=\"container\">\r\n                      <Link\r\n                        style={{ textDecoration: \"none\" }}\r\n                        to={{\r\n                          pathname: \"/\",\r\n                        }}\r\n                      >\r\n                        <h1>re-joy</h1>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  {/* //웹 이름 */}\r\n                </div>\r\n              </header>\r\n\r\n              <nav>\r\n                {/* 검색 */}\r\n                <fieldset id=\"search\">\r\n                  <div className=\"container\">\r\n                    <legend className=\"ir_su\">search</legend>\r\n                    <form className=\"search_cont\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={this.state.query}\r\n                        onChange={this.onSearch}\r\n                        id=\"input_search\"\r\n                        placeholder=\"search\"\r\n                        maxLength=\"50\"\r\n                      />\r\n                      <button type=\"submit\" onClick={this.onSearch_click}>\r\n                        <span className=\"search_button\"></span>\r\n                      </button>\r\n                    </form>\r\n                  </div>\r\n                </fieldset>\r\n                {/* //검색 */}\r\n              </nav>\r\n\r\n              <main>\r\n                {/* 추천 */}\r\n                <div className=\"recommend\">\r\n                  <div className=\"container\">\r\n                  <div className=\"glass\"></div>\r\n                  <div className=\"glass second_glass\"></div>\r\n                    <section>\r\n                      <div>\r\n                        <h3 className=\"ir_su\">recommend</h3>\r\n                        <div className=\"movies\">\r\n                          <h3 className=\"recommend_sort_title\">추천 영화</h3>\r\n                          <Slick {...slick_settings}>\r\n                            {movies.map((movie) => (\r\n                              <Movie\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                date={movie.release_date}\r\n                                summary={movie.overview}\r\n                                poster={movie.poster_path}\r\n                                backdrop={movie.backdrop_path}\r\n                                genres={movie.genre_ids}\r\n                                rating={movie.vote_average}\r\n                                adult={movie.adult}\r\n                              />\r\n                            ))}\r\n                          </Slick>\r\n                        </div>\r\n                        <div className=\"tvshows\">\r\n                          <h3 className=\"recommend_sort_title\">추천 티비쇼</h3>\r\n                          <Slick {...slick_settings}>\r\n                            {tvshows.map((tvshow) => (\r\n                              <Tvshow\r\n                                key={tvshow.id}\r\n                                id={tvshow.id}\r\n                                title={tvshow.name}\r\n                                date={tvshow.first_air_date}\r\n                                summary={tvshow.overview}\r\n                                poster={tvshow.poster_path}\r\n                                backdrop={tvshow.backdrop_path}\r\n                                genres={tvshow.genre_ids}\r\n                                rating={tvshow.vote_average}\r\n                                adult={tvshow.adult}\r\n                              />\r\n                            ))}\r\n                          </Slick>\r\n                        </div>\r\n                      </div>\r\n                    </section>\r\n                  </div>\r\n                </div>\r\n                {/* //추천 */}\r\n                {/* 분류 */}\r\n                <div className=\"category\">\r\n                  <div className=\"container\">\r\n                    <section>\r\n                      <h3 className=\"ir_su\">분류</h3>\r\n                    </section>\r\n                  </div>\r\n                </div>\r\n                {/* //분류 */}\r\n              </main>\r\n              <footer>\r\n                <div className=\"footer\">\r\n                  <div className=\"container\">\r\n                    <h2 className=\"ir_su\">푸터</h2>\r\n                    <span>re-joy</span>\r\n                    <div>https://github.com/hyeonjin25/re-joy-web</div>\r\n                  </div>\r\n                </div>\r\n              </footer>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../components/reset.css\";\r\nimport \"./Join.css\";\r\n\r\nconst Join = (props) => {\r\n  const [id, setId] = useState(\"\");\r\n  const [idValid, setIdValid] = useState(false);\r\n  const [pw, setPw] = useState(\"\");\r\n  const [pwValid, setPwValid] = useState(false);\r\n  const [pw_check, setPw_check] = useState(\"\");\r\n  const [pw_checkValid, setPw_checkValid] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [nameValid, setNameValid] = useState(false);\r\n  const [birth, setBirth] = useState(\"\");\r\n  const [birthValid, setBirthValid] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailValid, setEmailValid] = useState(false);\r\n  const [gender, setGender] = useState(\"M\");\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const serverUrl = \"http://localhost:9000/user/Join_process\";\r\n\r\n  //입력사항 전부 입력됐을 때만 서버로 전송\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // console.log({id, pw, pw_check, name, birth, email, gender});\r\n    if (idValid === false) setErr(\"아이디를 입력하세요\");\r\n    else if (pwValid === false)\r\n      setErr(\"비밀번호가 맞게 입력되었는지 확인해주세요\");\r\n    else if (pw_checkValid === false)\r\n      setErr(\"비밀번호확인이 일치하지 않습니다.\");\r\n    else if (nameValid === false) setErr(\"이름을 입력하세요\");\r\n    else if (birthValid === false)\r\n      setErr(\"생년월일이 맞게 입력되었는지 확인해주세요\");\r\n    else if (emailValid === false)\r\n      setErr(\"이메일이 맞게 입력되었는지 확인해주세요\");\r\n    else {\r\n      await axios\r\n        .post(serverUrl, { id, pw, pw_check, name, birth, email, gender })\r\n        .then((response) => {\r\n          console.log(response.data.id);\r\n          //setId(response.id)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n\r\n      //홈으로 이동\r\n      props.history.push({\r\n        pathname: \"/\",\r\n        state: {},\r\n      });\r\n    }\r\n  };\r\n\r\n  const onChangeId = (e) => {\r\n    setId(e.target.value);\r\n    if (e.target.value.length < 1) setIdValid(false);\r\n    else {\r\n      setIdValid(true);\r\n    }\r\n  };\r\n  const onChangePw = (e) => {\r\n    setPw(e.target.value);\r\n    //정규식(8~16자리 문자와 숫자 무조건 포함)\r\n    var ch = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,16}$/;\r\n    if (ch.test(e.target.value)) setPwValid(true);\r\n    else setPwValid(false);\r\n  };\r\n  const onChangePw_check = (e) => {\r\n    setPw_check(e.target.value);\r\n    //pw와 같을 시 통과\r\n    if (e.target.value !== pw) setPw_checkValid(false);\r\n    else setPw_checkValid(true);\r\n  };\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n    //2자 이상일시 통과\r\n    if (e.target.value.length < 2) setNameValid(false);\r\n    else setNameValid(true);\r\n  };\r\n  const onChangeBirth = (e) => {\r\n    setBirth(e.target.value);\r\n    //정규식(yyyymmdd 무조건 8자리, 숫자만 입력가능)\r\n    var br = /^(19[0-9][0-9]|20\\d{2})(0[0-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])$/;\r\n    if (br.test(e.target.value)) setBirthValid(true);\r\n    else setBirthValid(false);\r\n  };\r\n  const onChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n    //정규식 (이메일 형식대로 해야 통과)\r\n    var em = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n    if (em.test(e.target.value)) setEmailValid(true);\r\n    else setEmailValid(false);\r\n  };\r\n  const onChangeGender = (e) => {\r\n    if (e.target.value === \"female\") setGender(\"W\");\r\n    else setGender(\"M\");\r\n    console.log(gender);\r\n  };\r\n  return (\r\n    <div className=\"join_wrap\">\r\n      {/* 헤더 */}\r\n      <header className=\"join_header\">\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          to={{\r\n            pathname: \"/\",\r\n          }}\r\n        >\r\n          <h1>re-joy</h1>\r\n        </Link>\r\n      </header>\r\n      {/* //헤더 */}\r\n      {/* 컨텐츠 */}\r\n      <main className=\"join_main\">\r\n        {/* 회원가입 입력 */}\r\n        <div className=\"join_input\">\r\n          <h2>회원가입</h2>\r\n          <form onSubmit={onSubmit}>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"아이디\"\r\n                value={id}\r\n                name=\"id\"\r\n                onChange={onChangeId}\r\n                maxLength=\"20\"\r\n                style={{\r\n                  borderColor:\r\n                    idValid === true ? \"green\" : id !== \"\" ? \"red\" : \"\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"비밀번호(8~16자리, 숫자 및 영문 반드시 포함)\"\r\n                value={pw}\r\n                name=\"pw\"\r\n                onChange={onChangePw}\r\n                maxLength=\"20\"\r\n                style={{\r\n                  borderColor:\r\n                    pwValid === true ? \"green\" : pw !== \"\" ? \"red\" : \"\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"비밀번호 확인\"\r\n                value={pw_check}\r\n                name=\"pw_check\"\r\n                onChange={onChangePw_check}\r\n                maxLength=\"20\"\r\n                style={{\r\n                  borderColor:\r\n                    pw_checkValid === true\r\n                      ? \"green\"\r\n                      : pw_check !== \"\"\r\n                      ? \"red\"\r\n                      : \"\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"이름\"\r\n                className=\"input_name\"\r\n                value={name}\r\n                name=\"name\"\r\n                onChange={onChangeName}\r\n                maxLength=\"10\"\r\n                style={{\r\n                  borderColor:\r\n                    nameValid === true ? \"green\" : name !== \"\" ? \"red\" : \"\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"male_radio\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  value=\"male\"\r\n                  id=\"male\"\r\n                  checked\r\n                  onChange={onChangeGender}\r\n                />\r\n                <label htmlFor=\"male\">남자</label>\r\n              </div>\r\n              <div className=\"female_radio\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"gender\"\r\n                  value=\"female\"\r\n                  id=\"female\"\r\n                  onChange={onChangeGender}\r\n                />\r\n                <label htmlFor=\"female\">여자</label>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"생년월일(yyyymmdd)\"\r\n                value={birth}\r\n                name=\"birth\"\r\n                onChange={onChangeBirth}\r\n                maxLength=\"8\"\r\n                style={{\r\n                  borderColor:\r\n                    birthValid === true ? \"green\" : birth !== \"\" ? \"red\" : \"\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"이메일\"\r\n                value={email}\r\n                name=\"email\"\r\n                onChange={onChangeEmail}\r\n                maxLength=\"30\"\r\n                style={{\r\n                  borderColor:\r\n                    emailValid === true ? \"green\" : email !== \"\" ? \"red\" : \"\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input type=\"submit\" value=\"가입하기\" />\r\n              <div id=\"err\">{err}</div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {/* //회원가입 입력 */}\r\n      </main>\r\n      {/* 컨텐츠 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Mypage.css\";\r\n\r\nfunction Mypage() {\r\n  const [login_id, setLogin_id] = useState(\"\");\r\n  const [is_logined, setIs_logined] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //로그인이 되어있는지 확인하기\r\n    if (Cookies.get(\"login_id\")) {\r\n      //로그인 되어있을 경우\r\n      setIs_logined(true);\r\n      setLogin_id(Cookies.get(\"login_id\"));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"mypage_wrap\">\r\n      <header id=\"de_header\">\r\n        <div className=\"header\">\r\n          {/* 헤더메뉴 */}\r\n          <div className=\"header_top\">\r\n            <div className=\"container\">\r\n              {/* 웹 이름 */}\r\n              <Link\r\n                style={{ textDecoration: \"none\" }}\r\n                to={{\r\n                  pathname: \"/\",\r\n                }}\r\n              >\r\n                <h1>re-joy</h1>\r\n              </Link>\r\n              {/* //웹 이름 */}\r\n              {/* <ul className=\"link\">\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/Login\",\r\n                        state: {},\r\n                      }}\r\n                    >\r\n                      <li className=\"login\">로그인</li>\r\n                    </Link>\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/Join\",\r\n                        state: {},\r\n                      }}\r\n                    >\r\n                      <li className=\"join\">회원가입</li>\r\n                    </Link>\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/Mypage\",\r\n                        state: {},\r\n                      }}\r\n                    >\r\n                      <li className=\"mypage\">마이페이지</li>\r\n                    </Link>\r\n                  </ul> */}\r\n            </div>\r\n          </div>\r\n          {/* //헤더메뉴 */}\r\n        </div>\r\n      </header>\r\n      {/* //헤더 */}\r\n      <main>\r\n        {/* 즐겨찾기 체크된 영화 표시  */}\r\n        <div>\r\n          <div className=\"container\">\r\n            <h3 className=\"ir_su\">즐겨찾기 콘텐츠</h3>\r\n                <div className=\"starlist\">{login_id}님의 즐겨찾기 콘텐츠</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <div>\r\n          <h1>설정</h1>\r\n          <div className=\"setting\">\r\n            <div>\r\n              <a href=\"\">계정관리</a>\r\n            </div>\r\n            <div>\r\n              <a href=\"\">환경설정</a>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n      </main>\r\n      <footer>\r\n        <div className=\"footer\">\r\n          <div className=\"container\">\r\n            <h2 className=\"ir_su\">푸터</h2>\r\n            <span>re-joy</span>\r\n            <div>https://github.com/hyeonjin25/re-joy-web</div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mypage;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../components/reset.css\";\r\n\r\nconst Login = (props) => {\r\n  const [id, setId] = useState(\"\");\r\n  const [idValid, setIdValid] = useState(false);\r\n  const [pw, setPw] = useState(\"\");\r\n  const [pwValid, setPwValid] = useState(false);\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const serverUrl = \"http://localhost:9000/user/login_process\";\r\n\r\n  const fetchData = async () => {\r\n    await axios\r\n      .post(serverUrl, { id, pw })\r\n      .then((respond) => {\r\n        //로그인이 제대로 되면(is_logined가 true로 넘어오면)\r\n        if (respond.data.is_logined) {\r\n          //쿠키에 아이디 저장\r\n          Cookies.set(\"login_id\", respond.data.userid);\r\n          //홈으로 이동\r\n          props.history.push({\r\n            pathname: \"/\",\r\n            // state: { is_logined: respond.data.is_logined, id: respond.data.userid },\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error :\", error.message);\r\n      });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    if (idValid === false) setErr(\"아이디를 입력하세요\");\r\n    else if (pwValid === false) setErr(\"비밀번호를 입력하세요\");\r\n    else {\r\n      e.preventDefault();\r\n      fetchData();\r\n    }\r\n  };\r\n  const onChangeId = (e) => {\r\n    setId(e.target.value);\r\n    if (e.target.value.length < 1) setIdValid(false);\r\n    else {\r\n      setIdValid(true);\r\n    }\r\n  };\r\n  const onChangePw = (e) => {\r\n    setPw(e.target.value);\r\n    if (e.target.value.length < 1) setPwValid(false);\r\n    else setPwValid(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login_wrap\">\r\n      {/* 헤더 */}\r\n      <header className=\"join_header\">\r\n        <Link\r\n          style={{ textDecoration: \"none\" }}\r\n          to={{\r\n            pathname: \"/\",\r\n          }}\r\n        >\r\n          <h1>re-joy</h1>\r\n        </Link>\r\n      </header>\r\n      {/* //헤더 */}\r\n      {/* 컨텐츠 */}\r\n      <main className=\"join_main\" style={{ marginTop: 50 }}>\r\n        {/* 로그인 입력 */}\r\n        <div className=\"join_input\">\r\n          <h2 style={{ marginBottom: 20 }}>로그인</h2>\r\n          <form onSubmit={onSubmit}>\r\n            <div>\r\n              <input\r\n                style={{ marginBottom: 10, height: 50 }}\r\n                type=\"text\"\r\n                placeholder=\"아이디\"\r\n                value={id}\r\n                onChange={onChangeId}\r\n                maxLength=\"20\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                style={{ marginBottom: 10, height: 50 }}\r\n                type=\"password\"\r\n                placeholder=\"비밀번호\"\r\n                value={pw}\r\n                onChange={onChangePw}\r\n                maxLength=\"20\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <input type=\"submit\" value=\"로그인\" style={{ height: 50 }} />\r\n              <div id=\"err\">{err}</div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {/* //로그인 입력 */}\r\n      </main>\r\n      {/* 컨텐츠 */}\r\n      {/* 푸터 */}\r\n      <footer>\r\n        <div id=\"move_join\">\r\n          <ul>\r\n            <Link\r\n              to={{\r\n                pathname: \"/Join\",\r\n                state: {},\r\n              }}\r\n            >\r\n              <li>회원가입</li>\r\n            </Link>\r\n            <li>아이디찾기</li>\r\n            <li>비밀번호찾기</li>\r\n          </ul>\r\n        </div>\r\n      </footer>\r\n      {/* //푸터 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./reset.css\";\r\nimport \"./Movie.css\";\r\n\r\nfunction SearchRes({ id, title, poster, backdrop, summary, genres, adult, date, rating }) {\r\n\r\n  return (\r\n    <Link\r\n        to={{\r\n          pathname: \"/Detail/\" + title,\r\n          state: { id, title, poster, backdrop, summary, genres, adult, date, rating },\r\n        }}\r\n      >\r\n      <div className=\"movie\" style={{ marginLeft: 13, marginRight: 13 }}>\r\n        <img\r\n          className=\"poster\"\r\n          src={\"https://image.tmdb.org/t/p/w500\" + poster}\r\n          alt={title}\r\n          title={title}\r\n        />\r\n        <div className=\"movie_data\">\r\n          <h3 className=\"movie_title\" style={{color:\"black\"}}>{title}</h3>\r\n          <div className=\"movie_rating\">\r\n            <img\r\n              className=\"star_icon\"\r\n              src={require(\"../img/star_icon.png\")}\r\n              alt=\"rating\"\r\n            />\r\n            <h5 className=\"rating_text\"  style={{color:\"black\"}}>{rating}</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nSearchRes.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  media_type : PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default SearchRes;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchRes from \"../components/SearchRes\";\r\nimport \"../components/reset.css\";\r\nimport \"./Home.css\";\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    query: this.props.match.params.query,\r\n    query_results: [],\r\n    isLoding: true,\r\n  };\r\n\r\n  getSearchRes = async () => {\r\n    const serchUrl =\r\n      \"https://api.themoviedb.org/3/search/multi?api_key=9aa38313510a50c3ae30091b52efcc90&language=ko&query=\" +\r\n      this.state.query +\r\n      \"&page=1&include_adult=false\";\r\n\r\n    await axios\r\n      .get(serchUrl)\r\n      .then((response) => {\r\n        this.setState({\r\n          query_results: response.data.results,\r\n          isLoding: false,\r\n        });\r\n      })\r\n      .catch((errer) => {\r\n        console.log(\"errer: \", errer.message);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location, history, match } = this.props;\r\n    //검색을 통해 페이지로 들어온게 아닌경우 강제로 홈으로 이동시킴(state가 undefined일 떄)\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n    this.setState({ query: match.params.query });\r\n    this.getSearchRes();\r\n  }\r\n\r\n  //검색 버튼 누를 시(onClick)\r\n  onSearch_click = async () => {\r\n    const { history } = this.props;\r\n    history.push({\r\n      pathname: \"/Search/\" + this.state.query,\r\n      state: this.state.query,\r\n    });\r\n  };\r\n\r\n  //검색창에 데이터 입력시(onChange)\r\n  onSearch = (e) => {\r\n    this.setState({ query: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { query, query_results, isLoding } = this.state;\r\n    return (\r\n      <div>\r\n        {isLoding ? (\r\n          <div className=\"loder\">\r\n            {/* 로딩창 */}\r\n            <span className=\"loder_text\">Lodding...</span>\r\n            {/* //로딩창 */}\r\n          </div>\r\n        ) : (\r\n          <div className=\"Home\">\r\n            <div id=\"wrap\">\r\n              <header>\r\n                <div className=\"header\">\r\n                  {/* 헤더메뉴 */}\r\n                  <div className=\"header_top\">\r\n                    <div className=\"container\">\r\n                      <ul>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/Login\",\r\n                            state: {},\r\n                          }}\r\n                        >\r\n                          <li className=\"login\">로그인</li>\r\n                        </Link>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/Join\",\r\n                            state: {},\r\n                          }}\r\n                        >\r\n                          <li className=\"join\">회원가입</li>\r\n                        </Link>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/Mypage\",\r\n                            state: {},\r\n                          }}\r\n                        >\r\n                          <li className=\"mypage\">마이페이지</li>\r\n                        </Link>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                  {/* //헤더메뉴 */}\r\n                  {/* 웹 이름 */}\r\n                  <div className=\"header_center\">\r\n                    <div className=\"container\">\r\n                      <Link\r\n                        style={{ textDecoration: \"none\" }}\r\n                        to={{\r\n                          pathname: \"/\",\r\n                        }}\r\n                      >\r\n                        <h1>re-joy</h1>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  {/* //웹 이름 */}\r\n                </div>\r\n              </header>\r\n\r\n              <nav style={{height:30}}>\r\n                {/* 검색 */}\r\n                {/* <fieldset id=\"search\">\r\n                  <div className=\"container\">\r\n                  <legend className=\"ir_su\">search</legend>\r\n                  <form className=\"search_cont\">\r\n                      <input\r\n                      type=\"text\"\r\n                        value={this.state.query}\r\n                        onChange={this.onSearch}\r\n                        id=\"input_search\"\r\n                        placeholder=\"search\"\r\n                        maxLength=\"50\"\r\n                        />\r\n                        <button type=\"submit\" onClick={this.onSearch_click}>\r\n                        <span className=\"search_button\"></span>\r\n                      </button>\r\n                      </form>\r\n                      </div>\r\n                    </fieldset> */}\r\n                {/* //검색 */}\r\n                <div className=\"container\">\r\n                  <span>\"{this.state.query}\"에 대한 검색결과...</span>\r\n                </div>\r\n              </nav>\r\n\r\n              <main>\r\n                {/* 검색결과 */}\r\n                <div className=\"recommend\">\r\n                  <div className=\"container\">\r\n                    <section>\r\n                      <div style={{ padding: 37, paddingTop: 10 }}>\r\n                        <h3 className=\"ir_su\">search results</h3>\r\n                        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                          {/* 검색결과 배열 불러오기 */}\r\n                          {query_results.map((response) => (\r\n                            <SearchRes\r\n                              key={response.id}\r\n                              id={response.id}\r\n                              media_type={response.media_type}\r\n                              title={\r\n                                response.title === undefined\r\n                                  ? response.name\r\n                                  : response.title\r\n                              }\r\n                              date={response.release_date}\r\n                              summary={response.overview}\r\n                              poster={response.poster_path}\r\n                              backdrop={response.backdrop_path}\r\n                              genres={response.genre_ids}\r\n                              rating={response.vote_average}\r\n                              adult={response.adult}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </section>\r\n                  </div>\r\n                </div>\r\n                {/* //검색결과 */}\r\n              </main>\r\n\r\n              <footer>\r\n                <div className=\"footer\">\r\n                  <div className=\"container\">\r\n                    <h2 className=\"ir_su\">푸터</h2>\r\n                    <span>re-joy</span>\r\n                    <div>https://github.com/hyeonjin25/re-joy-web</div>\r\n                  </div>\r\n                </div>\r\n              </footer>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\";\r\nimport \"./Detail.css\";\r\nimport \"../components/Movie.css\";\r\nimport { element } from \"prop-types\";\r\n\r\nclass Detail extends React.Component {\r\n  state = {\r\n    //adult: \"\",\r\n    fav_process: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n\r\n    //컨텐츠 클릭을 통해 페이지로 들어온게 아닌경우 강제로 홈으로 이동시킴(state가 undefined일 떄)\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n\r\n    //페이지가 이동되어 올 떄 스크롤 맨 위로 올리기\r\n    window.scrollTo(0, 0);\r\n\r\n    document.body.style.backgroundColor = \"black\";\r\n\r\n    //   //청소년 관람불가인지 확인\r\n    //   if (location.state.adult === true)\r\n    //     this.setState({ adult: \"청소년 관람 불가\" });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.style.backgroundColor = \"#535962\";\r\n  }\r\n\r\n  fav_func = () => {\r\n    //로그인 돼있으면\r\n    if (Cookies.get(\"login_id\")) {\r\n      if (this.state.fav_process === false) {\r\n        this.setState({ fav_process: true });\r\n      } else this.setState({ fav_process: false });\r\n      //바뀐 fav상태 전달\r\n      this.fetchData();\r\n    }\r\n    //로그인 안돼있을 경우 경고\r\n    else{\r\n      window.alert(\"로그인이 필요한 기능입니다!\")\r\n    }\r\n  };\r\n\r\n  //서버에 favorite정보 전달하기 위해 연결\r\n  fetchData = async () => {\r\n    const { location } = this.props;\r\n    var serverUrl = \"http://localhost:9000/client/like_process \";\r\n    await axios\r\n      .post(serverUrl, [\r\n        Cookies.get(\"login_id\"),\r\n        location.state.title,\r\n        this.state.fav_process,\r\n      ])\r\n      .then((respond) => {\r\n        console.log(\"즐겨찾기 완료!\")\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"error :\", error.message);\r\n        this.setState({ fav_process: false });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return (\r\n        <div id=\"de_wrap\">\r\n          {/* 헤더 */}\r\n          <header id=\"de_header\">\r\n            <div className=\"header\">\r\n              {/* 헤더메뉴 */}\r\n              <div className=\"header_top\">\r\n                <div className=\"container\">\r\n                  {/* 웹 이름 */}\r\n                  <Link\r\n                    style={{ textDecoration: \"none\" }}\r\n                    to={{\r\n                      pathname: \"/\",\r\n                    }}\r\n                  >\r\n                    <h1>re-joy</h1>\r\n                  </Link>\r\n                  {/* //웹 이름 */}\r\n                  <ul className=\"link\">\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/Login\",\r\n                        state: {},\r\n                      }}\r\n                    >\r\n                      <li className=\"login\">로그인</li>\r\n                    </Link>\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/Join\",\r\n                        state: {},\r\n                      }}\r\n                    >\r\n                      <li className=\"join\">회원가입</li>\r\n                    </Link>\r\n                    <Link\r\n                      to={{\r\n                        pathname: \"/Mypage\",\r\n                        state: {},\r\n                      }}\r\n                    >\r\n                      <li className=\"mypage\">마이페이지</li>\r\n                    </Link>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              {/* //헤더메뉴 */}\r\n            </div>\r\n          </header>\r\n          {/* //헤더 */}\r\n          <main id=\"de_main\">\r\n            <div id=\"back_glass_l\" className=\"glass\"></div>\r\n            <div id=\"back_glass_r\" className=\"glass\"></div>\r\n            <div\r\n              id=\"back\"\r\n              style={{\r\n                width: 1000,\r\n                height: 500,\r\n                backgroundImage:\r\n                  \"url(https://image.tmdb.org/t/p/w500\" +\r\n                  location.state.backdrop +\r\n                  \")\",\r\n                backgroundRepeat: \"no-repeat\",\r\n                backgroundSize: \"900px 500px\",\r\n                backgroundPositionX: 50,\r\n                zIndex: 1,\r\n              }}\r\n            ></div>\r\n            <div id=\"de_movie\">\r\n              <div className=\"detail movie\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={this.fav_func}\r\n                  id=\"favorite\"\r\n                  value=\"favorite\"\r\n                  name=\"favorite\"\r\n                  style={{\r\n                    zIndex: \"3\",\r\n                    //버튼이 클릭됐을 때 구분할 수 있게 색 바꾸기\r\n                    backgroundColor: this.state.fav_process === true ? \"#faf0af\" : \"\",\r\n                    color: this.state.fav_process === true ? \"black\" : \"\",\r\n                  }}\r\n                >\r\n                  <img\r\n                    className=\"star_icon\"\r\n                    src={require(\"../img/star_icon.png\")}\r\n                    alt=\"rating\"\r\n                  />\r\n                </button>\r\n                <img\r\n                  className=\"poster\"\r\n                  src={\r\n                    \"https://image.tmdb.org/t/p/w500\" + location.state.poster\r\n                  }\r\n                  alt={location.state.title}\r\n                  title={location.state.title}\r\n                />\r\n                <div className=\"movie_data_wrap\">\r\n                  <div className=\"movie_data\">\r\n                    <h3 className=\"movie_title\">{location.state.title}</h3>\r\n                    {/* <div>{this.state.adult}</div> */}\r\n                    <div className=\"de_movie_rating\">\r\n                      <img\r\n                        className=\"star_icon\"\r\n                        src={require(\"../img/star_icon.png\")}\r\n                        alt=\"rating\"\r\n                      />\r\n                      <h5 className=\"rating_text\">\r\n                        평점:&emsp;{location.state.rating}\r\n                      </h5>\r\n                    </div>\r\n                    <h5 className=\"movie_year\">\r\n                      개봉일:&emsp;{location.state.date}\r\n                    </h5>\r\n                    <p className=\"movie_summary\">{location.state.summary}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n          <footer>\r\n            <div className=\"de_footer\">\r\n              <div className=\"container\">\r\n                <h2 className=\"ir_su\">푸터</h2>\r\n                <span>re-joy</span>\r\n                <div>https://github.com/hyeonjin25/re-joy-web</div>\r\n              </div>\r\n            </div>\r\n          </footer>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./routes/Home\";\r\nimport Join from \"./routes/Join\";\r\nimport Mypage from \"./routes/Mypage\";\r\nimport Login from \"./routes/Login\";\r\nimport Search from \"./routes/Search\";\r\nimport Detail from \"./routes/Detail\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Route path=\"/\" exact={true} component={Home} />\r\n      <Route path=\"/Mypage\" component={Mypage} />\r\n      <Route path=\"/Join\" component={Join} />\r\n      <Route path=\"/Login\" component={Login} />\r\n      <Route path=\"/Search/:query\" exact={true} component={Search} />\r\n      <Route path=\"/Detail/:title\" exact={true} component={Detail} />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}